if(NOT P_TARGET_PROCESSOR)
  set(P_TARGET_PROCESSOR ${CMAKE_SYSTEM_PROCESSOR})
endif()

set(CPACK_PACKAGE_VENDOR ${P_VENDOR_NAME})
set(CPACK_PACKAGE_CONTACT ${P_AUTHOR_MAIL})

if(project_type STREQUAL "EXECUTABLE")
  set(CPACK_PACKAGE_NAME ${P_NAME})
else()
  set(CPACK_PACKAGE_NAME lib${P_NAME})
endif()

set(CPACK_PACKAGE_DESCRIPTION ${P_DESCRIPTION})
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY ${P_SUMMARY})
set(CPACK_PACKAGE_HOMEPAGE_URL ${P_HOMEPAGE})

set(CPACK_PACKAGE_VERSION_MAJOR ${P_VERSION_MAJOR})
set(CPACK_PACKAGE_VERSION_MINOR ${P_VERSION_MINOR})
set(CPACK_PACKAGE_VERSION_PATCH ${P_VERSION_PATCH})

set(CPACK_PACKAGE_FILE_NAME
    ${CPACK_PACKAGE_NAME}_${VERSION_NO}_${P_TARGET_PROCESSOR}
)

set(CPACK_PACKAGE_INSTALL_DIRECTORY ${CPACK_PACKAGE_NAME})
set(CPACK_PACKAGE_DIRECTORY "${CMAKE_SOURCE_DIR}/packages")
set(CPACK_PACKAGING_INSTALL_PREFIX ${P_INSTALL_PREFIX})

set(CPACK_SET_DESTDIR ON)
set(CPACK_STRIP_FILES ON)
set(CPACK_SOURCE_STRIP_FILES ON)
# set(CPACK_VERBATIM_VARIABLES YES)

# system based packaging
if(${CMAKE_SYSTEM_NAME} MATCHES Darwin)
  if(EXISTS "${CMAKE_SOURCE_DIR}/WELCOME.txt")
    set(CPACK_RESOURCE_FILE_WELCOME "${CMAKE_SOURCE_DIR}/WELCOME.txt")
  endif()

  set(CPACK_GENERATOR "productbuild;TGZ")
  set(CPACK_SOURCE_GENERATOR "TGZ")
elseif(${CMAKE_SYSTEM_NAME} MATCHES Linux)
  file(STRINGS "/etc/os-release" os_name REGEX "^NAME=")

  # create deb package for Debian and Ubuntu
  if(${os_name} MATCHES "^(NAME)=\"(Debian GNU/Linux|Ubuntu)\"$")
    set(CPACK_DEBIAN_FILE_NAME DEB-DEFAULT)
    set(CPACK_COMPONENTS_GROUPING ALL_COMPONENTS_IN_ONE)
    set(CPACK_DEB_COMPONENT_INSTALL YES)
    set(CPACK_DEBIAN_PACKAGE_DESCRIPTION "${P_DESCRIPTION}")
    set(CPACK_DEBIAN_PACKAGE_SHLIBDEPS ON)
    set(CPACK_DEBIAN_PACKAGE_DEPENDS "")
    set(CPACK_DEBIAN_PACKAGE_MAINTAINER "${P_AUTHOR_NAME}")
    set(CPACK_DEBIAN_PACKAGE_SECTION contrib/devel)
    set(CPACK_GENERATOR "DEB;TGZ")
  else()
    set(CPACK_GENERATOR "TGZ")
  endif()

  set(CPACK_SOURCE_GENERATOR "TGZ")
elseif(${CMAKE_SYSTEM_NAME} MATCHES FreeBSD)
  set(CPACK_FREEBSD_PACKAGE_DESCRIPTION "${P_DESCRIPTION}")
  set(CPACK_FREEBSD_PACKAGE_LICENSE "MIT")
  set(CPACK_FREEBSD_PACKAGE_DEPS "")
  set(CPACK_FREEBSD_PACKAGE_MAINTAINER "${P_AUTHOR_NAME}")
  set(CPACK_SOURCE_GENERATOR "TGZ")
else()
  set(CPACK_SOURCE_GENERATOR "TGZ")
endif()

include(CPack)
